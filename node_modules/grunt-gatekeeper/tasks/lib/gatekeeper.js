/*
 * grunt-gatekeeper
 * http://gh.apple.com/kumavis/grunt-gatekeeper
 */


exports.init = function(grunt) {
  'use strict';

  var exports = {};

  var ChildProcess = require('child_process');
  var Path = require('path');
  var gatekeeperPath = require.resolve('gatekeeper');

  exports.spinUp = function(options, cb) {
    var serverPort, forwardHost, forwardPort, command, config, noCSRF, args;

    // if there is an `assetPath`, prepare for static files, otherwise prepare host and port
    if (options.assetPath) {
      forwardHost = "\"file://"+Path.resolve(options.assetPath)+"\"";
    } else {
      forwardHost = options.forwardHost;
    }
    serverPort  = options.serverPort;
    forwardPort = options.forwardPort;
    config      = options.config;
    noCSRF      = options.noCSRF;

    args = [];
    if (config)      args = args.concat(['--conf', config]);
    if (serverPort)  args = args.concat(['--port', serverPort]);
    if (forwardHost) args = args.concat(['--forward-host', forwardHost]);
    if (forwardPort) args = args.concat(['--forward-port', forwardPort]);
    if (noCSRF)      args = args.concat(['--no-csrf']);

    command = 'node "' + gatekeeperPath + '" server ' + args.join(' ');
    console.log(command);
    ChildProcess.exec(command);
    cb(null);
  };

  return exports;
};
