var extend = require('xtend'),
    path   = require('path'),
    fs     = require('fs'),
    GatekeeperConfig;

GatekeeperConfig = module.exports = function(defaults, config) {
  this.defaults = defaults;
  this.options = {};
  if (config) this.options = config;
  this.settings = extend(this.defaults, this.options);;
};

GatekeeperConfig.prototype.extend = function(config) {
  this.options = config;
  this.settings = extend(this.defaults, config); 
};

GatekeeperConfig.prototype.get = function(key) {
  if (['sslKey', 'sslCert'].indexOf(key) !== -1) return this[key].call(this);
  return this.settings[key];
};

GatekeeperConfig.prototype.set = function(key, value) {
  this.settings[key] = value;
  return this;
};

GatekeeperConfig.prototype.sslKey = function() {
  var base = process.cwd(), file = this.settings.sslKey;
  if (!this.options.sslKey) base = path.dirname(__dirname);
  return fs.readFileSync(path.join(base, file));
};

GatekeeperConfig.prototype.sslCert = function() {
  var base = process.cwd(), file = this.settings.sslCert;
  if (!this.options.sslCert) base = path.dirname(__dirname);
  return fs.readFileSync(path.join(base, file));
};

