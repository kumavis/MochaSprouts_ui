{
  "name": "gatekeeper",
  "version": "0.2.0",
  "description": "AppleConnect application proxy",
  "main": "index.js",
  "bin": {
    "gatekeeper": "./bin/gatekeeper.js"
  },
  "dependencies": {
    "connect": "2.7.2",
    "request": "2.16.6",
    "http-proxy": "0.10.0",
    "xtend": "2.0.3",
    "client-sessions": "0.1.1",
    "commander": "~1.1.1"
  },
  "devDependencies": {
    "dot": "1.0.1",
    "should": "1.2.2",
    "mocha": "1.9.0",
    "chai": "1.5.0"
  },
  "scripts": {
    "test": "make test"
  },
  "author": {
    "name": "Alex Goodwin",
    "email": "alex_goodwin@apple.com"
  },
  "readme": "# AppleConnect Gatekeeper\n\n* ACG runs as a lightweight, user facing HTTP server/client proxy.\n* ACG initiates and tracks AppleConnect sessions\n* Destination services are HTTP services or static assets that are only accessible via the AppleConnect Gatekeeper\n* All incoming requests are authenticated against AppleConnect before proxying to the destination service.\n* If not authenticated, the destination service is never queried.\n  * Unauthenticated requests can be configured to return either a JSON error or 301 Redirect\n* ACG sends X-AppleConnect-\\* headers to the destination service\n* The destination service considers the user to be authenticated as the person identified by this value\n\n\n## Requirements\n\n* node/npm\n\n\n## Instructions\n\nInstall the global gatekeeper command line utility\n\n* clone gatekeeper\n* npm install\n* npm link\n\nRun tests with `npm test`\n\n\n## Usage\n\n**gatekeeper init**\n\nWrites a default gatekeeper.json that can be used with `gatekeeper server`\n\n**gatekeeper server**\n\nStarts a gatekeeper server that forwards to specified host and port\n\nOptions:\n\n* -c, --conf <filename> Specify a config file to load in (generated from gatekeeper init)\n* -p, --port <port> Specify what port the gatekeeper server listened on\n* -o, --offline Use appleconnect in offline mode\n* -s, --https Use https server\n* --forward-host <host> Host that gatekeeper server forwards to\n* --forward-port <port> Port on host that gatekeeper server forwards to\n\n\n## Headers\n\nAppleConnect Gatekeeper provides the following headers to destination services\n\n* x-appleconnect-dsid\n* x-appleconnect-type\n* x-appleconnect-email\n* x-appleconnect-groups\n* x-appleconnect-first\n* x-appleconnect-last\n* x-appleconnect-nick\n\n\n## CSRF Protection\n\nAppleConnect Gatekeeper enforces CSRF protection for any requests other than GET/HEAD/OPTIONS\n\nAll responses include a token in the X-CSRF-Token header that should be included in these requests\nin a X-CSRF-Token request header, \\_csrf form field or \\_csrf GET parameter\n\nMore info at: http://www.senchalabs.org/connect/csrf.html\n\n\n## Load balancing\n\nTo load balance (round-robin) between multiple destination servers, add the following to your config json:\n\n      \"destinationServers\": [\n        {\n          \"host\": \"md1.apple.com\",\n          \"port\": 80\n        }, {\n          \"host\": \"md2.apple.com\",\n          \"port\": 80\n        }\n      ],\n\nThis will override the --forward-host and --forward-port options as well as any forwardHost or forwardPort specified in the config.\n\n\n## Static assets\n\nGatekeeper will serve static assets when forwardHost is specified with a file:// url:\n\n      \"forwardHost\": \"file:///absolute/path/to/assets\"\n\nor\n\n      --forward-host file:///absolute/path/to/assets\n\n\nforwardPort is ignored in this case.  file:// urls can not be used with load balancing.\n\nOptionally defaultStaticFile can also be specified (relative the file:// url) to return a given file for all requests that don't match any other file\n",
  "readmeFilename": "README.md",
  "_id": "gatekeeper@0.2.0",
  "dist": {
    "shasum": "17e2606bae95ae912ff0b21a5284fe27c505f2bb"
  },
  "_resolved": "git://gh.apple.com/md/gatekeeper.js.git#3e0e2bf313578e1fb3e7e7f40f84b9f63cf406e5",
  "_from": "gatekeeper@git://gh.apple.com/md/gatekeeper.js.git#0.2.0"
}
