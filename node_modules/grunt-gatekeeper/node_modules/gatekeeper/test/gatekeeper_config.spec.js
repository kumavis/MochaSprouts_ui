var GatekeeperConfig = require('../lib/gatekeeper_config'),
    defaults         = require('../data/config'),
    expect           = require('chai').expect;

describe('GatekeeperConfig', function() {
  it('saves reference to defaults that it is created with', function() {
    var expected = {},
        config = new GatekeeperConfig(expected);
    expect(config.defaults).to.equal(expected);
  });

  it('takes a second arg of config overwrites', function() {
    var defaults = { three: 3 },
        overwrites = { four: 4 },
        config = new GatekeeperConfig(defaults, overwrites);
    expect(config.settings).to.deep.equal({ three: 3, four: 4 });
  });

  it('mixes in custom config after the fact with .extend()', function() {
    var defaults = { one: 1 },
        mixes = { two: 2 },
        config = new GatekeeperConfig(defaults);
    config.extend(mixes);
    expect(config.settings).to.deep.equal({ one: 1, two: 2 });
  });

  it('can get items out for the config', function() {
    var defaults = { three: 3 },
        overwrites = { four: 4 },
        config = new GatekeeperConfig(defaults, overwrites);
    expect(config.get('three')).to.equal(3);
    expect(config.get('four')).to.equal(4);
  });

  it('can set items into for the config', function() {
    var defaults = { three: 3 },
        overwrites = { four: 4 },
        config = new GatekeeperConfig(defaults, overwrites);
    expect(config.set('three', 5)).to.equal(config);
    expect(config.get('three')).to.equal(5);
  });
});
