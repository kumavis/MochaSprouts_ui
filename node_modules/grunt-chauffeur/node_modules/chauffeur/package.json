{
  "name": "chauffeur",
  "version": "0.4.1",
  "description": "Tool to start up a express server with optional local routes and proxy locations",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com:joeytrapp/node-chauffeur.git"
  },
  "author": {
    "name": "Joey Trapp"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/joeytrapp/node-chauffeur/issues"
  },
  "dependencies": {
    "testable-middleware": "~0.3.2",
    "express": "~3.3.4",
    "http-proxy": "~0.10.3"
  },
  "readme": "# Chauffeur\n\nTool for setting up a development express server that can serve static files, setup test routes, proxy requests, and integrates [testable-middleware](https://github.com/joeytrapp/node-testable-middleware).\n\n## Usage\n\nHere is an example usage of `chauffeur`.\n\n    var chauffeur = require('chauffeur'), config;\n\n    config = {\n        port: 8000,\n        staticFiles: ['public'],\n        testable: { route: '/test.html' },\n        routes: 'config/routes.js',\n        proxy: [\n            { path: '/api', host: 'localhost', port: 3000 }\n        ]\n    };\n\n    chauffeur(config, function() {\n        console.log('Server is started');\n    });\n\n## Config\n\n### config.port\n\nThe port that the express webserver will run on. Defaults to port 8000.\n\n### config.staticFiles\n\nString or array of strings of paths relative to `./`. These directories are where static files are served from. In the case of an array, each location is checked in order.\n\n### config.routes\n\nString or array of strings of paths relative to `./`. These should be javascript should export a function that takes the express app as an argument. The primary use case for this feature is to allow you to stub out requests that would otherwise get proxied to a backend server.\n\n    // config/routes.js\n    module.exports = function(app) {\n        app.get('/:resource/:id', function(res, req) {\n            var obj = {}; // Load some fixture data or something.\n            res.setHeader('Content-Type', 'application/json');\n            res.end(JSON.parse(obj));\n        });\n    };\n\n### config.proxy\n\nArray of objects. Each object in an array will be evaluated for whether or not it should handle the proxy. Any item that doesn't implement a `path` key will handle all requests.\n\n    proxy: [\n        { path: '/api', host: 'localhost', port: 3000 },\n        { host: 'localhost', port: 80 }\n    ]\n\nIn this example, requests to `localhost:8000/api` will get proxied to localhost:3000, and all other requests will go to localhost:80.\n\n### config.testable\n\n`chauffeur` integrates [testable-middleware](https://github.com/joeytrapp/node-testable-middleware), and the object set to `config.testable` is passed on to testable-middleware. See [testable](https://github.com/joeytrapp/node-testable) for options that can be passed to testable.\n",
  "readmeFilename": "README.md",
  "_id": "chauffeur@0.4.1",
  "dist": {
    "shasum": "e24c5a2b4ace3bb54785ac5515c26bfb7dcea8d7"
  },
  "_from": "chauffeur@~0.4.1",
  "_resolved": "http://registry.npmjs.org/chauffeur/-/chauffeur-0.4.1.tgz"
}
